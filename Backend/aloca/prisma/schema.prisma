generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model alocacao {
  id_alocacao              Int        @id @unique(map: "id_alocacao_UNIQUE") @default(autoincrement())
  observacoes_colegiado    String?    @db.VarChar(100)
  turma                    String?    @db.VarChar(10)
  disciplina_id_disciplina Int
  professor_id_professor   Int?
  semestre_id_semestre     Int
  disciplina               disciplina @relation(fields: [disciplina_id_disciplina], references: [id_disciplina], onDelete: NoAction, onUpdate: NoAction, map: "fk_alocacao_disciplina1")
  professor                professor? @relation(fields: [professor_id_professor], references: [id_professor], onDelete: NoAction, onUpdate: NoAction, map: "fk_alocacao_professor1")
  semestre                 semestre   @relation(fields: [semestre_id_semestre], references: [id_semestre], onDelete: NoAction, onUpdate: NoAction, map: "fk_alocacao_semestre1")

  @@index([disciplina_id_disciplina], map: "fk_alocacao_disciplina1_idx")
  @@index([professor_id_professor], map: "fk_alocacao_professor1_idx")
  @@index([semestre_id_semestre], map: "fk_alocacao_semestre1_idx")
}

model area {
  id_area    Int          @id @unique(map: "id_area_UNIQUE") @default(autoincrement())
  nome_area  String       @db.VarChar(100)
  disciplina disciplina[]
  professor  professor[]
}

model curso {
  id_curso   Int          @id @unique(map: "id_curso_UNIQUE") @default(autoincrement())
  nome_curso String       @db.VarChar(100)
  tipo_curso String       @db.VarChar(100)
  disciplina disciplina[]
}

model disciplina {
  id_disciplina   Int        @unique(map: "id_disciplina_UNIQUE") @default(autoincrement())
  periodo         Int
  cod             String     @db.VarChar(20)
  nome_disciplina String     @db.VarChar(100)
  carga_horaria   Int
  qtd_creditos    Int
  curso_id_curso  Int
  area_id_area    Int
  alocacao        alocacao[]
  area            area       @relation(fields: [area_id_area], references: [id_area], onDelete: NoAction, onUpdate: NoAction, map: "fk_disciplina_area1")
  curso           curso      @relation(fields: [curso_id_curso], references: [id_curso], onDelete: NoAction, onUpdate: NoAction, map: "fk_disciplina_curso")

  @@id([id_disciplina, curso_id_curso, area_id_area])
  @@index([area_id_area], map: "fk_disciplina_area1_idx")
  @@index([curso_id_curso], map: "fk_disciplina_curso_idx")
}

model professor {
  id_professor   Int        @unique(map: "id_professores_UNIQUE") @default(autoincrement())
  nome_professor String     @db.VarChar(150)
  observacoes    String?    @db.VarChar(100)
  area_id_area   Int
  alocacao       alocacao[]
  area           area       @relation(fields: [area_id_area], references: [id_area], onDelete: NoAction, onUpdate: NoAction, map: "fk_professor_area1")

  @@id([id_professor, area_id_area])
  @@index([area_id_area], map: "fk_professor_area1_idx")
}

model semestre {
  id_semestre   Int        @id @unique(map: "id_semestre_UNIQUE") @default(autoincrement())
  nome_semestre String     @db.VarChar(10)
  alocacao      alocacao[]
}
